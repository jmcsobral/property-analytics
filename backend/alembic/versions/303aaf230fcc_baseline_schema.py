"""baseline schema

Revision ID: 303aaf230fcc
Revises: 
Create Date: 2025-09-25 13:40:13.079200

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '303aaf230fcc'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('properties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('typology', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_properties_id'), 'properties', ['id'], unique=False)
    op.create_index(op.f('ix_properties_property_id'), 'properties', ['property_id'], unique=True)
    op.create_table('snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_snapshots_id'), 'snapshots', ['id'], unique=False)
    op.create_table('annotations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('contacted', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_annotations_id'), 'annotations', ['id'], unique=False)
    op.create_table('property_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snapshot_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('price_per_m2', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('raw_json', sa.Text(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('zone', sa.String(), nullable=True),
    sa.Column('typology', sa.String(), nullable=True),
    sa.Column('agency', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('parking', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('elevator', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('new_construction', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('rented', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('trespasse', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['snapshot_id'], ['snapshots.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_snapshots_address'), 'property_snapshots', ['address'], unique=False)
    op.create_index(op.f('ix_property_snapshots_agency'), 'property_snapshots', ['agency'], unique=False)
    op.create_index(op.f('ix_property_snapshots_city'), 'property_snapshots', ['city'], unique=False)
    op.create_index(op.f('ix_property_snapshots_district'), 'property_snapshots', ['district'], unique=False)
    op.create_index(op.f('ix_property_snapshots_id'), 'property_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_property_snapshots_tags'), 'property_snapshots', ['tags'], unique=False)
    op.create_index(op.f('ix_property_snapshots_typology'), 'property_snapshots', ['typology'], unique=False)
    op.create_index(op.f('ix_property_snapshots_zone'), 'property_snapshots', ['zone'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_property_snapshots_zone'), table_name='property_snapshots')
    op.drop_index(op.f('ix_property_snapshots_typology'), table_name='property_snapshots')
    op.drop_index(op.f('ix_property_snapshots_tags'), table_name='property_snapshots')
    op.drop_index(op.f('ix_property_snapshots_id'), table_name='property_snapshots')
    op.drop_index(op.f('ix_property_snapshots_district'), table_name='property_snapshots')
    op.drop_index(op.f('ix_property_snapshots_city'), table_name='property_snapshots')
    op.drop_index(op.f('ix_property_snapshots_agency'), table_name='property_snapshots')
    op.drop_index(op.f('ix_property_snapshots_address'), table_name='property_snapshots')
    op.drop_table('property_snapshots')
    op.drop_index(op.f('ix_annotations_id'), table_name='annotations')
    op.drop_table('annotations')
    op.drop_index(op.f('ix_snapshots_id'), table_name='snapshots')
    op.drop_table('snapshots')
    op.drop_index(op.f('ix_properties_property_id'), table_name='properties')
    op.drop_index(op.f('ix_properties_id'), table_name='properties')
    op.drop_table('properties')
    # ### end Alembic commands ###
